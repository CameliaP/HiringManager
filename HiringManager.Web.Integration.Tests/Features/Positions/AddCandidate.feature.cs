// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace HiringManager.Web.Integration.Tests.Features.Positions
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AddCandidate")]
    public partial class AddCandidateFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AddCandidate.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AddCandidate", "In order to manage my staffing needs\r\nAs a manager\r\nI want to add candidates to o" +
                    "pen positions", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I want to create the position \'Senior Software Developer\' to start on \'June 1, 20" +
                    "11\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.And("I submit the create position request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table1.AddRow(new string[] {
                        "College"});
            table1.AddRow(new string[] {
                        "Recruiter"});
            table1.AddRow(new string[] {
                        "Human Resources"});
#line 9
 testRunner.And("I have the following sources", ((string)(null)), table1, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add Candidate Without Source or Documents")]
        public virtual void AddCandidateWithoutSourceOrDocuments()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Candidate Without Source or Documents", ((string[])(null)));
#line 15
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Name",
                        "Fred Bob"});
            table2.AddRow(new string[] {
                        "Email",
                        "fred@bob.com"});
            table2.AddRow(new string[] {
                        "Phone",
                        "123-456-7890"});
#line 16
 testRunner.Given("I have the following candidate", ((string)(null)), table2, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileName"});
            table3.AddRow(new string[] {
                        "Resume.pdf"});
#line 21
 testRunner.And("the candidate has the following resumes", ((string)(null)), table3, "And ");
#line 24
 testRunner.When("I submit the the candidate to AddCandidate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("I should be redirected to the Position Candidates Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
 testRunner.And("the requested position should have a status of \'Open\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("\'Fred Bob\' should be listed as a candidate with a status of \'Resume Received\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add Candidate With Source")]
        public virtual void AddCandidateWithSource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Candidate With Source", ((string[])(null)));
#line 30
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "Name",
                        "Fred Bob"});
            table4.AddRow(new string[] {
                        "Email",
                        "fred@bob.com"});
            table4.AddRow(new string[] {
                        "Phone",
                        "123-456-7890"});
            table4.AddRow(new string[] {
                        "Source",
                        "Human Resources"});
#line 31
 testRunner.Given("I have the following candidate", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileName"});
            table5.AddRow(new string[] {
                        "Resume.pdf"});
#line 37
 testRunner.And("the candidate has the following resumes", ((string)(null)), table5, "And ");
#line 40
 testRunner.When("I submit the the candidate to AddCandidate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.Then("I should be redirected to the Position Candidates Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
 testRunner.And("the requested position should have a status of \'Open\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("\'Fred Bob\' should be listed as a candidate with a status of \'Resume Received\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "Source",
                        "Human Resources"});
#line 44
 testRunner.And("the candidate details page for \'Fred Bob\' should have the following fields", ((string)(null)), table6, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add Candidate With Documents")]
        public virtual void AddCandidateWithDocuments()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Candidate With Documents", ((string[])(null)));
#line 48
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "Name",
                        "Fred Bob"});
            table7.AddRow(new string[] {
                        "Email",
                        "fred@bob.com"});
            table7.AddRow(new string[] {
                        "Phone",
                        "123-456-7890"});
#line 49
 testRunner.Given("I have the following candidate", ((string)(null)), table7, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "FileName"});
            table8.AddRow(new string[] {
                        "Resume.pdf"});
#line 54
 testRunner.And("the candidate has the following resumes", ((string)(null)), table8, "And ");
#line 57
 testRunner.When("I submit the the candidate to AddCandidate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.Then("I should be redirected to the Position Candidates Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 59
 testRunner.And("the requested position should have a status of \'Open\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("\'Fred Bob\' should be listed as a candidate with a status of \'Resume Received\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text"});
            table9.AddRow(new string[] {
                        "Resume.pdf"});
#line 61
 testRunner.And("the candidate details page for \'Fred Bob\' should show the following resumes", ((string)(null)), table9, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add Candidate after position has been filled")]
        public virtual void AddCandidateAfterPositionHasBeenFilled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Candidate after position has been filled", ((string[])(null)));
#line 65
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "Name",
                        "Fred Bob"});
            table10.AddRow(new string[] {
                        "Email",
                        "fred@bob.com"});
            table10.AddRow(new string[] {
                        "Phone",
                        "123-456-7890"});
#line 66
 testRunner.Given("I have added the following candidate", ((string)(null)), table10, "Given ");
#line 71
 testRunner.And("I have hired the candidate \'Fred Bob\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Name",
                        "Sue Jane"});
            table11.AddRow(new string[] {
                        "Email",
                        "sue@jane.com"});
            table11.AddRow(new string[] {
                        "Phone",
                        "123-456-7890"});
#line 72
 testRunner.When("I add the following candidate", ((string)(null)), table11, "When ");
#line 77
 testRunner.Then("I should be returned to the Add Candidate page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyName",
                        "Message"});
            table12.AddRow(new string[] {
                        "PositionId",
                        "Cannot add a candidate to a filled position."});
#line 78
 testRunner.And("the page should report the following errors", ((string)(null)), table12, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
