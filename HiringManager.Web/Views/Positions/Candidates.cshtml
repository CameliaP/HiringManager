@model HiringManager.Web.ViewModels.Positions.PositionCandidatesViewModel

@{
    ViewBag.Title = "Candidates";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Candidates for @Model.Title (@Model.Status)</h2>
<div class="container">
    <table class="table table-striped table-bordered table-bordered">
        <thead>
            <tr>
                <th colspan="5">
                    <div class="btn-group">
                        @{
                            var canAdd = Model.CanAddCandidate ? "" : "disabled";
                            var canClose = Model.CanClose ? "" : "disabled";
                        }
                        <a class="btn btn-default @canAdd" title="Add a candidate to an open position." href="@Url.Action(MVC.Positions.AddCandidate(Model.PositionId))">New Candidate</a>
                        <a class="btn btn-default @canClose" title="Close the position without hiring a candidate" href="@Url.Action(MVC.Positions.Close(Model.PositionId))">Close Without Hiring</a>
                    </div>

                </th>
            </tr>
            <tr>
                <th>Name</th>
                <th>Contact Info</th>
                <th>Status</th>
                <th>Source</th>
                <th>@Model.OpeningsFilled of @Model.Openings filled</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var candidate in Model.Candidates)
            {
                <tr>
                    <td>@candidate.CandidateName</td>
                    <td>
                        <ul>
                            @foreach (var contactInfo in candidate.ContactInfo)
                            {
                                <li>@contactInfo.Type : @contactInfo.Value</li>
                            }
                        </ul>
                    </td>
                    <td>@candidate.Status</td>
                    <td>
                        @if (@candidate.SourceId.HasValue)
                        {
                            @Html.ActionLink(@candidate.Source, MVC.Source.Details(@candidate.SourceId.Value))
                        }
                        else
                        {
                            <span>(none)</span>
                        }
                        
                    </td>
                    <td>
                        @{
                            var canPass = candidate.CanPass ? "" : "disabled";
                            var canSetStatus = candidate.CanSetStatus ? "" : "disabled";
                            var canHire = candidate.CanHire ? "" : "disabled";   
                         }

                        <div class="btn-group">
                            <a class="btn btn-default @canPass" href="@Url.Action("Pass", new {id = candidate.CandidateStatusId})">Pass</a>
                            <a class="btn btn-default @canSetStatus" href="@Url.Action("Status", new {id = candidate.CandidateStatusId})" >Set Status</a>
                            <a class="btn btn-default @canHire" href="@Url.Action("Hire", new {id = candidate.CandidateStatusId})">Hire</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>