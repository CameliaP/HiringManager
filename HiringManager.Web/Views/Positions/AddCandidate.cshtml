@using Microsoft.Ajax.Utilities
@using Ninject
@model HiringManager.Web.Models.Positions.AddCandidateViewModel

@{
    ViewBag.Title = "Add Candidate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Add Candidate</h2>
    @using (@Html.BeginForm(null, null, null, FormMethod.Post, new {@class="form-horizontal"}))
    {
        @Html.HiddenFor(m => m.PositionId)

        <div class="form-group row">
            @Html.LabelFor(m => m.Name, "Name", new {@class="col-xs-1 control-label"})
            @Html.TextBoxFor(m => m.Name, new {@class="form-control"})
            @Html.ValidationMessageFor(m => m.Name)
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.EmailAddress, "Email", new { @class = "col-xs-1 control-label" })
            <input name="EmailAddress" type="email" value="@Model.EmailAddress" class="form-control" />
            @Html.ValidationMessageFor(m => m.EmailAddress)
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.PhoneNumber, "Phone", new { @class = "col-xs-1 control-label" })
            <input name="PhoneNumber" type="tel" value="@Model.PhoneNumber" class="form-control" />
            @Html.ValidationMessageFor(m => m.PhoneNumber)
        </div>
        
        <div class="btn-group">
            <button type="submit" class="btn btn-primary">OK</button>
            <a type="button" href="@Url.Action("Candidates", new {id = Model.PositionId})" class="btn btn-default" role="button">Cancel</a>            
        </div>
       
    }
</div>
